{"version":3,"sources":["components/Title.js","firebase/config.js","hooks/useStorage.js","components/ProgressBar.js","components/UploadForm.js","hooks/useFireStore.js","components/ImageGrid.js","components/Modal.js","App.js","index.js"],"names":["Title","className","firebase","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","projectFirestore","timestamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snapshot","bytesTransferred","totalBytes","Error","a","getDownloadURL","add","createAt","ProgressBar","setFile","motion","div","initial","width","animate","UploadForm","type","onChange","e","selectedFile","target","files","includes","useFireStore","docs","setDocs","unsub","orderBy","onSnapshot","querySnapshot","data","forEach","ImageGrid","setSelectedImg","map","img","layout","whileHover","scale","opacity","transition","duration","onClick","key","delay","src","alt","Modal","selectedImg","y","stopPropagation","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b0d93a69.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className='title'>\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n      <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit.</p>\n    </div>\n  );\n};\n\nexport default Title;\n","// 將全部東西以 firebase 的名稱引入\nimport * as firebase from 'firebase/app';\n// 將用來儲存圖片檔案庫引入\nimport 'firebase/storage';\n// 將儲存資料的資料庫引入\nimport 'firebase/firestore';\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n  apiKey: 'AIzaSyCfzMKsmbrxadphW165WcyeXfgvFojge8w',\n  authDomain: 'firegram-b9227.firebaseapp.com',\n  projectId: 'firegram-b9227',\n  storageBucket: 'firegram-b9227.appspot.com',\n  messagingSenderId: '971874054723',\n  appId: '1:971874054723:web:b6252a900f1bea9d1d5af6',\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\n// 啟用 storage 和 firestore, timestam;的服務然後輸出\nconst projectStorage = firebase.storage();\nconst projectFirestore = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { projectStorage, projectFirestore, timestamp };\n","import { useState, useEffect } from 'react';\nimport { projectStorage, projectFirestore, timestamp } from '../firebase/config';\n\nconst useStorage = (file) => {\n  const [progress, setProgress] = useState(0);\n  const [error, setError] = useState(null);\n  const [url, setUrl] = useState(null);\n\n  useEffect(() => {\n    const storageRef = projectStorage.ref(file.name);\n    const collectionRef = projectFirestore.collection('images');\n\n    storageRef.put(file).on(\n      'state_changed',\n      (snapshot) => {\n        let progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n        setProgress(progress);\n      },\n      (error) => {\n        setError(Error);\n      },\n      async () => {\n        const url = await storageRef.getDownloadURL();\n        collectionRef.add({ url, createAt: timestamp() });\n        setUrl(url);\n      },\n    );\n  }, [file]);\n  return { progress, error, url };\n};\n\nexport default useStorage;\n","import React, { useEffect } from 'react';\nimport useStorage from '../hooks/useStorage';\nimport { motion } from 'framer-motion';\n\nconst ProgressBar = ({ file, setFile }) => {\n  const { progress, url } = useStorage(file);\n\n  useEffect(() => {\n    if (url) {\n      setFile(null);\n    }\n  }, [url, setFile]);\n\n  return (\n    <motion.div\n      className='progress-bar'\n      initial={{ width: 0 }}\n      animate={{ width: progress + '%' }}\n    ></motion.div>\n  );\n};\n\nexport default ProgressBar;\n","import React, { useState } from 'react';\nimport ProgressBar from './ProgressBar';\n\nconst UploadForm = () => {\n  const [file, setFile] = useState(null);\n  const [error, setError] = useState(null);\n  const onChangeFile = (e) => {\n    const selectedFile = e.target.files[0];\n    const types = ['image/png', 'image/jpeg'];\n    if (selectedFile && types.includes(selectedFile.type)) {\n      setFile(selectedFile);\n      setError(null);\n    } else {\n      setFile(null);\n      setError('Please select an image file (png or jpeg)');\n      return;\n    }\n  };\n  return (\n    <form>\n      <label>\n        <input type='file' onChange={onChangeFile} />\n        <span>+</span>\n      </label>\n      <div className='output'>\n        {error && <div className='error'>{error}</div>}\n        {file && <div>{file.name}</div>}\n        {file && <ProgressBar file={file} setFile={setFile}></ProgressBar>}\n      </div>\n    </form>\n  );\n};\n\nexport default UploadForm;\n","import { useState, useEffect } from 'react';\nimport { projectFirestore } from '../firebase/config';\n\nconst useFireStore = (collection) => {\n  const [docs, setDocs] = useState([]);\n  useEffect(() => {\n    const unsub = projectFirestore\n      .collection(collection)\n      .orderBy('createAt', 'desc')\n      .onSnapshot((querySnapshot) => {\n        let data = [];\n        querySnapshot.forEach((snapshot) => {\n          data = [...data, snapshot.data()];\n        });\n        setDocs(data);\n      });\n    return () => unsub();\n  }, [collection]);\n\n  return { docs };\n};\n\nexport default useFireStore;\n","import React from 'react';\nimport useFireStore from '../hooks/useFireStore';\nimport { motion } from 'framer-motion';\n\nconst ImageGrid = ({ setSelectedImg }) => {\n  const { docs } = useFireStore('images');\n  const renderImageList = () => {\n    return docs.map((img) => (\n      <motion.div\n        layout\n        whileHover={{\n          scale: 1.05,\n          opacity: 1,\n          transition: { duration: 0.5 },\n        }}\n        onClick={() => setSelectedImg(img.url)}\n        className='img-wrap'\n        key={img.createAt}\n      >\n        <motion.img\n          initial={{ opacity: 0 }}\n          animate={{ opacity: 1 }}\n          transition={{ delay: 0.5 }}\n          src={img.url}\n          alt='uploaded pic'\n        />\n      </motion.div>\n    ));\n  };\n  return <div className='img-grid'>{docs && renderImageList()}</div>;\n};\n\nexport default ImageGrid;\n","import React from 'react';\nimport { motion } from 'framer-motion';\n\nconst Modal = ({ selectedImg, setSelectedImg }) => {\n  return (\n    <motion.div\n      initial={{ opacity: 0 }}\n      animate={{ opacity: 1 }}\n      className='backdrop'\n      onClick={() => setSelectedImg(null)}\n    >\n      <motion.img\n        initial={{ y: -100 + 'vh' }}\n        animate={{ y: 0 }}\n        src={selectedImg}\n        alt='enlarged pic'\n        onClick={(e) => e.stopPropagation()}\n      />\n    </motion.div>\n  );\n};\n\nexport default Modal;\n","import React, { useState } from 'react';\nimport Title from './components/Title';\nimport UploadForm from './components/UploadForm';\nimport ImageGrid from './components/ImageGrid';\nimport Modal from './components/Modal';\n\nfunction App() {\n  const [selectedImg, setSelectedImg] = useState(null);\n  return (\n    <div className='App'>\n      <Title />\n      <UploadForm></UploadForm>\n      <ImageGrid setSelectedImg={setSelectedImg}></ImageGrid>\n      {selectedImg && <Modal selectedImg={selectedImg} setSelectedImg={setSelectedImg}></Modal>}\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}